// Delete the engine if there is one linked to the Agent.
if engineID == "" {
  // No engine is linked to the Agent.
  return nil
}

// Check if the engine exist.
baseUrl, err := tpgresource.ReplaceVars(d, config, "{{"{{"}}DiscoveryEngineBasePath{{"}}"}}")
if err != nil {
  return err
}
engineUrl := baseUrl + engineID
_, err = transport_tpg.SendRequest(transport_tpg.SendRequestOptions{
  Config:    config,
  Method:    "GET",
  Project:   project,
  RawURL:    engineUrl,
  UserAgent: userAgent,
})
if err != nil {
  log.Printf("[DEBUG] engine %s doesn't exist. No need to delete", engineID)
  return nil
}

// delete the engine
log.Printf("[DEBUG] Deleting engine %v", engineID)
_, err = transport_tpg.SendRequest(transport_tpg.SendRequestOptions{
  Config:    config,
  Method:    "DELETE",
  Project:   project,
  RawURL:    engineUrl,
  UserAgent: userAgent,
  Timeout:   d.Timeout(schema.TimeoutDelete),
})
if err != nil {
  return fmt.Errorf("Error deleting engine %s: %s", engineID, err)
}
log.Printf("[DEBUG] Finished deleting engine %s", engineID)
